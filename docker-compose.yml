 version: '3.8'

services:
  # Neo4j Database
  neo4j:
    image: neo4j:latest
    container_name: river_neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/12345678
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - river_network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "12345678", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Flask Application
  river_app:
    build: .
    container_name: river_app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=12345678
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - river_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: river_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - river_app
    networks:
      - river_network
    restart: unless-stopped

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:

networks:
  river_network:
    driver: bridge